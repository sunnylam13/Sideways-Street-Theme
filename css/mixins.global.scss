////////////////////////////////////////////
///// 		MIXINS GLOBAL
///////////////////////////////////////////////

// all mixins that are not universal ones... that are specific to this project are placed here
// don't forget to include the $ in front of the variables

@mixin sectionMargins041515($marginTop, $marginBottom) {
	// where arguments are a value in px, em or %
	margin-top: $marginTop;
	margin-bottom: $marginBottom;
}

@mixin sectionPadding041515($padTop, $padBottom) {
	// where arguments are a value in px, em or %
	padding-top: $padTop;
	padding-bottom: $padBottom;
}

@mixin highlightBoxShadow041515a($colour) {
	// to accomplish a kind of shadow on only the left and right side... with some top, bottom bleed
	// box-shadow: 12px 0 15px -4px rgba(31, 73, 125, 0.8), -12px 0 8px -4px rgba(31, 73, 125, 0.8);
	box-shadow: 12px 0 15px -4px $colour, -12px 0 8px -4px $colour;
}

@mixin highlightBoxShadow041515b($colour,$hor,$blur,$spread) {
	// to accomplish a kind of shadow on only the left and right side...
	// in SCSS this must be within the target element as it uses & 
	// NOTE:  you must remember to set the target element to be position relative or this won't work right
	// box-shadow: Hpx Vpx Blurpx spreadR green;
	
	&:before {
		box-shadow: $hor 0 $blur $spread inset;
		    content: " ";
	    height: 100%;
	    left: -15px;
	    position: absolute;
	    top: 0;
	    width: 15px;
	}
	// NOTE:  It appears that the :after may be pushed down for some reason from unknown top properties... you may have to add a top: 0 after you use this mixin in order to fix it...  if this is a common problem I may add it here instead.
	&:after {
		box-shadow: $hor 0 $blur $spread inset;
		    content: " ";
	    top: 0;
	    height: 100%;
	    position: absolute;
	    right: -15px;
	    width: 15px;
	}
}

@mixin flexboxSettings041615a {
	// this must be used within a parent element
	// the div.flexbox must be used or some sort of wrapping parent element
	& .flexbox {
		display: flex;
		flex-flow: row wrap;
		justify-content: space-around;
		align-content: center;
		align-items: center;
	}
}

@mixin flexboxSettings041715a {
	// this is used within a parent without the class .flexbox... the actual class name used will vary
	display: flex;
	flex-flow: row wrap;
	justify-content: space-around;
	align-content: center;
	align-items: center;
}

@mixin headerMajor041615a($borderStyle,$fontfamily,$fontsize,$backColor) {
	// HEADER MAJOR SECTION STYLING
	// this code must be placed within the styling for a parent
	& header.major {
		border-top: $portfolioBorderMajor;
		position: relative;
		padding-bottom: 5%;
		& h2 {
			position: absolute;
			font-family: $portfolioHeaderFontFamily;
			font-size: $portfolioHeaderFontSize;
			background: $portfolioHeaderColourBack;
			// set the background colour of the h2 to match the background of the section.portfolio so it appears the line is chopped there... may require z-index
			top: -57%;
			left: 44%;
			padding: 1% 2% 1% 2%;
		}
	}
}

@mixin headerMajor041815a($borderStyle,$fontfamily,$fontsize,$backColor) {
	// HEADER MAJOR SECTION STYLING
	// this code must be placed within the styling for a parent
	& header.major {
		border-top: $portfolioBorderMajor;
		position: relative;
		padding-bottom: 5%;

		// 480
		@include phoneR {
			margin-bottom: 5%;
		}

		// 414
		@include iphone6Plus414R {
			margin-top: 5%;
			margin-bottom: 6%;
		}

		// 272
		@include applewatch42mm272R {
			margin-top: 10%;
			margin-bottom: 10%;
		}

		& div {
			position: absolute;
			top: -50%;
			bottom: 0;
			right: 0;
			left: 0;
			text-align: center;

			// 1024
			@include desktopRHD1024 {
				top: -37%;
			}

			@include desktopR1024 {
				top: -39%;
			}

			// 940+
			@include desktopR {
				// top: -27%;
				top: -42%;
			}

			// 768
			@include tabletR {
				top: -49%;
			}

			// 720
			@include phabletR {
				top: -53%;
			}

			// 480
			@include phoneR {
				top: -89%;
			}

			// 272
			@include applewatch42mm272R {
				top: -152%;
			}
		}
		& h2 {
			// if you don't set display inline h2 becomes a block element that blocks out the border of header.major
			display: inline;
			// position: absolute;
			font-family: $portfolioHeaderFontFamily;
			font-size: $portfolioHeaderFontSize;
			background: $portfolioHeaderColourBack;
			// set the background colour of the h2 to match the background of the section.portfolio so it appears the line is chopped there... may require z-index
			// top: -57%;
			// left: 44%;
			padding: 1% 2% 1% 2%;
		}
	}
}

@mixin beforeIconPlace041615a($content) {
	// $content must be a string... in the form of '\f01d'
	// what will change each time you use it is the Unicode for content: ''

	// to make this work you have to use the FontAwesome font and the content must be the icon's Unicode (available at FA's website)
	// http://stackoverflow.com/questions/18793428/put-an-icon-after-list-item-with-after-and-font-awesome
	content: $content;
	font-family: FontAwesome;
	font-weight: normal;
	font-style: normal;
	margin:0px 20px 0px 0px;
	text-decoration:none;
}

@mixin csshexagon041715a($borderWidth,$top,$bottom,$left,$right) {
	// you should insert this within a div of some sort to create this
	// set no height
	// if you want a triangle pointing in a specific direction set the colour of the border opposite to it
	// set all other borders to transparent
	width: 0;
	border-top: $borderWidth solid $top;
	border-bottom: $borderWidth solid $bottom;
	border-left: $borderWidth solid $left;
	border-right: $borderWidth solid $right;
}

@mixin standardLinkStyle041715a($fontsize,$fontfamily,$fontcolour,$backColour,$backColourHover) {
	display: inline-block;
	font-size: $fontsize;
	font-family: $fontfamily;
	color: $fontcolour;
	padding: 2% 8% 2% 8%;
	margin-right: 2%;
	margin-left: 2%;
	border-radius: 5px;
	background: $backColour;
	&:hover {
		background: $backColourHover;
	}
}

@mixin socialIconHoverChange041715a($backColour) {
	&:hover {
		background: darken($backColour,25%);
	}
}

@mixin pointArrowReference041815a {
	// this is purely for reference
	// to adapt it you'd have to swap out the csshexagon include for the correct direction... the absolute positioning would also change
	&::before {
		content: " ";
		position: absolute;
		@include csshexagon041715a(1.875em,transparent,$subnavcolourback,transparent,transparent);
		top: -60px;
		right: 36%;
	}
}

@mixin pointArrowHighlights041815a($borderWidth,$colour) {
	// HIGHLIGHTS
	// this is the arrow code for the icons for Highlights section
	// this could also be ::after or ::before though it doesn't matter because we're using absolute positioning
	// aparrently ::before works better however that may affect the Font Awesome icon
	&::after {
		content: " ";
		position: absolute;
		@include csshexagon041715a($borderWidth,$colour,transparent,transparent,transparent);
		bottom: -76%;
		right: 0;
	}
}

@mixin pointArrowDate041815a($borderWidth,$colour) {
	// FOOTER > RECENT POSTS > DATE
	// this is the arrow code for the .date blocks in the section.recentPosts in footer.scss
	&::after {
		content: " ";
		position: absolute;
		@include csshexagon041715a($borderWidth,transparent,transparent,$colour,transparent);
		top: 0;
		left: 92%;
		z-index:2;

		// &:hover {
		// 	border-left: 1.875em solid $recentPostDateBackHover;
		// }

		// 1024
		@include ipadAir1024PortR {
			top: 16%;
			left: 98%;
		}

		@include ipadAir1024R {
			top: 16%;
			left: 98%;
		}

		// 720-768
		// @include phabletSpecial032615V1 {
		// 	top: -2%;
		// 	left: 93%; 
		// }
		
		// 768
		@include tabletR {
			top: 19%;
		}

		// 667
		@include iphone6Plus667R {
			top: 16%;
		}
		


	}
}

@mixin imgShaderSetup041815a($height,$shaderBack,$spanFontSize,$spanColour) {
	// & .imgShaderBox1 {
	// 	margin: 0;
	// 	padding: 0;
	// }

	& .imgShaderScreen1 {

		// the alternative version to this is to use this styling as a hover state on the image...  the span.fa would have to be right after the img and selected with an adjacent ~ selector
		
		// where the parent must be position relative... usually insider a .imgShaderBox1
		// where height must match the height of the img to be overlaid

		margin: 0;
		padding: 0;
		width: 100%;
		height: $height;
		position: absolute;
		top: 0;

		// default display is none
		// use Javascript to set this to display: flex
		// display:flex;
		display:none;
		justify-content:center;
		align-items: center;

		background: $shaderBack;
		& span.fa {
			font-size: $spanFontSize;
			color: $spanColour;
		}
	}
}

@mixin bodyFadeIn041915a {
	@-webkit-keyframes fadeIn {
		0% {
			opacity:0;
		}

		100% {
			opacity: 1;
		}
	}
}


///////////////////////////////////////////////